import os
from groq import Groq
from dotenv import load_dotenv
from crewai import Agent, Task, Crew, Process

# Carregar vari√°veis do ambiente
load_dotenv()

client = Groq(
    api_key=os.environ.get("GROQ_API_KEY"),
)

# üîë Configurar chave da OpenAI
os.environ["OPENAI_API_KEY"] = os.getenv("OPENAI_API_KEY")

criador_conteudo = Agent(
    role="Especialista em LinkedIn",
    goal="Criar postagens informativas e profissionais com t√≥picos bem desenvolvidos.",
    backstory="Especialista em criar postagens virais e envolventes para redes sociais.",
    verbose=True
)

revisor = Agent(
    role="Editor de Conte√∫do",
    goal="Otimizar o conte√∫do, garantindo clareza, gram√°tica e fluidez.",
    backstory="Editor experiente que transforma postagens simples em conte√∫dos envolventes.",
    verbose=True
)

formatador = Agent(
    role="Especialista em Formata√ß√£o",
    goal="Estruturar o post de forma organizada, mantendo a est√©tica e legibilidade.",
    backstory="Especialista em melhorar a legibilidade e a estrutura visual do texto.",
    verbose=True
)

task_criar = Task(
    description=(
        "Escreva uma postagem criativa e envolvente sobre {tema}. "
        "Cada t√≥pico deve conter exatamente 5 linhas para manter um bom equil√≠brio entre clareza e profundidade. "
        "O formato da postagem deve ser o seguinte:\n\n"
        "# üöÄ T√≠tulo chamativo\n\n"
        "üí° Introdu√ß√£o curta e impactante (m√°ximo de 3 linhas)\n\n"
        "1Ô∏è‚É£ Dica 1 - Explica√ß√£o com exatamente 5 linhas\n"
        "2Ô∏è‚É£ Dica 2 - Explica√ß√£o com exatamente 5 linhas\n"
        "3Ô∏è‚É£ Dica 3 - Explica√ß√£o com exatamente 5 linhas\n\n"
        "üî• Chamada final para a√ß√£o\n\n"
        "#HashtagsRelevantes"
    ),
    expected_output="Uma postagem formatada com t√≥picos de exatamente 5 linhas.",
    agent=criador_conteudo
)

task_revisar = Task(
    description=(
        "Revise a postagem e garanta que:\n"
        "- Todos os par√°grafos seguem as regras de tamanho.\n"
        "- Os t√≥picos possuem **exatamente 5 linhas**.\n"
        "- A linguagem seja natural, envolvente e clara.\n"
        "- Nenhum par√°grafo esteja muito longo ou curto.\n"
        "- Os emojis e hashtags estejam bem distribu√≠dos."
    ),
    expected_output="Post revisado, garantindo que cada t√≥pico tenha exatamente 5 linhas.",
    agent=revisor
)

task_formatar = Task(
    description=(
        "Formate o post para que ele seja visualmente agrad√°vel e bem estruturado.\n"
        "- Mantenha o formato correto sem alterar o n√∫mero de linhas dos t√≥picos.\n"
        "- Certifique-se de que cada se√ß√£o tem espa√ßamento adequado.\n"
        "- N√£o use negrito (**), it√°lico (*) ou qualquer outra marca√ß√£o especial.\n"
        "- Deixe a postagem com um aspecto profissional e limpo."
    ),
    expected_output="Post formatado com espa√ßamento correto e estrutura profissional.",
    agent=formatador
)

crew = Crew(
    agents=[criador_conteudo, revisor, formatador],
    tasks=[task_criar, task_revisar, task_formatar],
    process=Process.sequential
)

def gerar_publicacao(tema):
    return str(crew.kickoff(inputs={"tema": tema}))
